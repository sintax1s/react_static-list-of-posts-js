{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","PostInfo","post","title","length","PostList","posts","id","data","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,SACGH,EAAKI,QCJGC,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BF,EAGEE,EAHFF,KACAD,EAEEG,EAFFH,MACAI,EACED,EADFC,KAGF,OACE,mCACE,sBAAKN,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCG,IAEtC,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYC,GAFlB,SAIGA,OAIL,qBAAKF,UAAU,oBAAf,SACGM,WCrBEC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,YCHjBK,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAb,EAGEY,EAHFZ,KACAO,EAEEK,EAFFL,KACAE,EACEG,EADFH,SAGF,OACE,mCACE,sBAAKR,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUb,KAAMA,UAIpB,mBAAGC,UAAU,iBAAb,SACGM,IAGH,uBAECE,EAASK,OAAU,cAAC,EAAD,CAAaL,SAAUA,IACvC,mBAAG,UAAQ,oBAAX,mCC9BCM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKf,UAAU,WAAf,SACGe,EAAMN,KAAI,SAAAE,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKK,YCWjC,IAAMC,EAAOC,EAAgBT,KAAI,SAAAE,GAAI,kCACvCA,GADuC,IAE1CZ,MAXmBoB,EAWDR,EAAKQ,OAVhBC,EAAgBC,MAAK,SAAAtB,GAAI,OAAIA,EAAKiB,KAAOG,MAAW,MAW3DX,UARuBc,EAQGX,EAAKK,GAPxBO,EAAmBC,QAAO,SAAAnB,GAAO,OAAIA,EAAQiB,SAAWA,MAC1D,QAFP,IAAyBA,EAJJH,KAeRM,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUe,MAAOE,QCvBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d016d1b3.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <>\n      <div className=\"CommentInfo\">\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">{name}</strong>\n\n          {' by '}\n\n          <a\n            className=\"CommentInfo__email\"\n            href={`mailto:${email}`}\n          >\n            {email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {body}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} />\n      ))}\n    </div>\n  </>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList/CommentList';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <>\n      <div className=\"PostInfo\">\n        <div className=\"PostInfo__header\">\n          <h3 className=\"PostInfo__title\">{title}</h3>\n\n          <p>\n            {' Posted by  '}\n\n            <UserInfo user={user} />\n          </p>\n        </div>\n\n        <p className=\"PostInfo__body\">\n          {body}\n        </p>\n\n        <hr />\n\n        {comments.length ? (<CommentList comments={comments} />)\n          : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        }\n      </div>\n    </>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo post={post} key={post.id} />\n      ))}\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nexport const data = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={data} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}